{"ast":null,"code":"var _jsxFileName = \"/home/jadidi/Desktop/term7/html/contactSave/NetProject/client/src/components/contacts/ContactItem.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useContacts, deleteContact, setCurrent, clearCurrent } from '../../context/contact/ContactState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactItem = _ref => {\n  _s();\n  let {\n    contact\n  } = _ref;\n  // we just need the contact dispatch without state.\n  const contactDispatch = useContacts()[1];\n  const {\n    _id,\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n  const onDelete = () => {\n    deleteContact(contactDispatch, _id);\n    clearCurrent(contactDispatch);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-primary text-left\",\n      children: [name, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          float: 'right'\n        },\n        className: 'badge ' + (type === 'professional' ? 'badge-success' : 'badge-primary'),\n        children: type.charAt(0).toUpperCase() + type.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: [email && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-envelope-open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), \" \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), phone && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), \" \", phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark btn-sm\",\n        onClick: () => setCurrent(contactDispatch, contact),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger btn-sm\",\n        onClick: onDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactItem, \"35jUa142Q7yQnCNpozo/P7M3P9M=\", false, function () {\n  return [useContacts];\n});\n_c = ContactItem;\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default ContactItem;\nvar _c;\n$RefreshReg$(_c, \"ContactItem\");","map":{"version":3,"names":["React","PropTypes","useContacts","deleteContact","setCurrent","clearCurrent","ContactItem","contact","contactDispatch","_id","name","email","phone","type","onDelete","float","charAt","toUpperCase","slice","propTypes","object","isRequired"],"sources":["/home/jadidi/Desktop/term7/html/contactSave/NetProject/client/src/components/contacts/ContactItem.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useContacts,\n  deleteContact,\n  setCurrent,\n  clearCurrent\n} from '../../context/contact/ContactState';\n\nconst ContactItem = ({ contact }) => {\n  // we just need the contact dispatch without state.\n  const contactDispatch = useContacts()[1];\n\n  const { _id, name, email, phone, type } = contact;\n\n  const onDelete = () => {\n    deleteContact(contactDispatch, _id);\n    clearCurrent(contactDispatch);\n  };\n\n  return (\n    <div className='card bg-light'>\n      <h3 className='text-primary text-left'>\n        {name}{' '}\n        <span\n          style={{ float: 'right' }}\n          className={\n            'badge ' +\n            (type === 'professional' ? 'badge-success' : 'badge-primary')\n          }\n        >\n          {type.charAt(0).toUpperCase() + type.slice(1)}\n        </span>\n      </h3>\n      <ul className='list'>\n        {email && (\n          <li>\n            <i className='fas fa-envelope-open' /> {email}\n          </li>\n        )}\n        {phone && (\n          <li>\n            <i className='fas fa-phone' /> {phone}\n          </li>\n        )}\n      </ul>\n      <p>\n        <button\n          className='btn btn-dark btn-sm'\n          onClick={() => setCurrent(contactDispatch, contact)}\n        >\n          Edit\n        </button>\n        <button className='btn btn-danger btn-sm' onClick={onDelete}>\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default ContactItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SACEC,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,YAAY,QACP,oCAAoC;AAAC;AAE5C,MAAMC,WAAW,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC9B;EACA,MAAMC,eAAe,GAAGN,WAAW,EAAE,CAAC,CAAC,CAAC;EAExC,MAAM;IAAEO,GAAG;IAAEC,IAAI;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGN,OAAO;EAEjD,MAAMO,QAAQ,GAAG,MAAM;IACrBX,aAAa,CAACK,eAAe,EAAEC,GAAG,CAAC;IACnCJ,YAAY,CAACG,eAAe,CAAC;EAC/B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAI,SAAS,EAAC,wBAAwB;MAAA,WACnCE,IAAI,EAAE,GAAG,eACV;QACE,KAAK,EAAE;UAAEK,KAAK,EAAE;QAAQ,CAAE;QAC1B,SAAS,EACP,QAAQ,IACPF,IAAI,KAAK,cAAc,GAAG,eAAe,GAAG,eAAe,CAC7D;QAAA,UAEAA,IAAI,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGJ,IAAI,CAACK,KAAK,CAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACxC;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACL;MAAI,SAAS,EAAC,MAAM;MAAA,WACjBP,KAAK,iBACJ;QAAA,wBACE;UAAG,SAAS,EAAC;QAAsB;UAAA;UAAA;UAAA;QAAA,QAAG,KAAC,EAACA,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAEhD,EACAC,KAAK,iBACJ;QAAA,wBACE;UAAG,SAAS,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG,KAAC,EAACA,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAExC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACL;MAAA,wBACE;QACE,SAAS,EAAC,qBAAqB;QAC/B,OAAO,EAAE,MAAMR,UAAU,CAACI,eAAe,EAAED,OAAO,CAAE;QAAA,UACrD;MAED;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAQ,SAAS,EAAC,uBAAuB;QAAC,OAAO,EAAEO,QAAS;QAAA,UAAC;MAE7D;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEV,CAAC;AAAC,GAlDIR,WAAW;EAAA,QAESJ,WAAW;AAAA;AAAA,KAF/BI,WAAW;AAoDjBA,WAAW,CAACa,SAAS,GAAG;EACtBZ,OAAO,EAAEN,SAAS,CAACmB,MAAM,CAACC;AAC5B,CAAC;AAED,eAAef,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}