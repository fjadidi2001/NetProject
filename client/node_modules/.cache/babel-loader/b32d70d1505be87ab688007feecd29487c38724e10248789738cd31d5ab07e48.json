{"ast":null,"code":"var _jsxFileName = \"/home/jadidi/Desktop/term7/html/contactSave/NetProject/client/src/components/contacts/Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem';\nimport Spinner from '../layout/Spinner';\nimport { useContacts, getContacts } from '../../context/contact/ContactState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contacts = () => {\n  _s();\n  const [contactState, contactDispatch] = useContacts();\n  const {\n    contacts,\n    filtered\n  } = contactState;\n  useEffect(() => {\n    getContacts(contactDispatch);\n  }, [contactDispatch]);\n  if (contacts !== null && contacts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Please add a contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: contacts !== null ? /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: filtered !== null ? filtered.map(contact => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"item\",\n        children: /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }, this)\n      }, contact._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)) : contacts.map(contact => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"item\",\n        children: /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }, this)\n      }, contact._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Contacts, \"ixwFcGvtr8TdbPy87nNF/b3gTcA=\", false, function () {\n  return [useContacts];\n});\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","Fragment","useEffect","CSSTransition","TransitionGroup","ContactItem","Spinner","useContacts","getContacts","Contacts","contactState","contactDispatch","contacts","filtered","length","map","contact","_id"],"sources":["/home/jadidi/Desktop/term7/html/contactSave/NetProject/client/src/components/contacts/Contacts.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem';\nimport Spinner from '../layout/Spinner';\nimport { useContacts, getContacts } from '../../context/contact/ContactState';\n\nconst Contacts = () => {\n  const [contactState, contactDispatch] = useContacts();\n\n  const { contacts, filtered } = contactState;\n\n  useEffect(() => {\n    getContacts(contactDispatch);\n  }, [contactDispatch]);\n\n  if (contacts !== null && contacts.length === 0) {\n    return <h4>Please add a contact</h4>;\n  }\n\n  return (\n    <Fragment>\n      {contacts !== null ? (\n        <TransitionGroup>\n          {filtered !== null\n            ? filtered.map((contact) => (\n                <CSSTransition\n                  key={contact._id}\n                  timeout={500}\n                  classNames='item'\n                >\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))\n            : contacts.map((contact) => (\n                <CSSTransition\n                  key={contact._id}\n                  timeout={500}\n                  classNames='item'\n                >\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))}\n        </TransitionGroup>\n      ) : (\n        <Spinner />\n      )}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,eAAe,QAAQ,wBAAwB;AACvE,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,oCAAoC;AAAC;AAE9E,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,WAAW,EAAE;EAErD,MAAM;IAAEK,QAAQ;IAAEC;EAAS,CAAC,GAAGH,YAAY;EAE3CR,SAAS,CAAC,MAAM;IACdM,WAAW,CAACG,eAAe,CAAC;EAC9B,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,IAAIC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAACE,MAAM,KAAK,CAAC,EAAE;IAC9C,oBAAO;MAAA,UAAI;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAK;EACtC;EAEA,oBACE,QAAC,QAAQ;IAAA,UACNF,QAAQ,KAAK,IAAI,gBAChB,QAAC,eAAe;MAAA,UACbC,QAAQ,KAAK,IAAI,GACdA,QAAQ,CAACE,GAAG,CAAEC,OAAO,iBACnB,QAAC,aAAa;QAEZ,OAAO,EAAE,GAAI;QACb,UAAU,EAAC,MAAM;QAAA,uBAEjB,QAAC,WAAW;UAAC,OAAO,EAAEA;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG,GAJ5BA,OAAO,CAACC,GAAG;QAAA;QAAA;QAAA;MAAA,QAMnB,CAAC,GACFL,QAAQ,CAACG,GAAG,CAAEC,OAAO,iBACnB,QAAC,aAAa;QAEZ,OAAO,EAAE,GAAI;QACb,UAAU,EAAC,MAAM;QAAA,uBAEjB,QAAC,WAAW;UAAC,OAAO,EAAEA;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG,GAJ5BA,OAAO,CAACC,GAAG;QAAA;QAAA;QAAA;MAAA,QAMnB;IAAC;MAAA;MAAA;MAAA;IAAA,QACU,gBAElB,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA;EACT;IAAA;IAAA;IAAA;EAAA,QACQ;AAEf,CAAC;AAAC,GA1CIR,QAAQ;EAAA,QAC4BF,WAAW;AAAA;AAAA,KAD/CE,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}