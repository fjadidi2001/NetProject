{"ast":null,"code":"var _jsxFileName = \"/home/jadidi/Desktop/term7/html/contactSave/NetProject/client/src/context/auth/AuthState.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useReducer, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utiles/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\n// Create a custom hook to use the auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useAuth = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  return [state, dispatch];\n};\n\n// Action creators\n// NOTE: These could be moved to a separate file like in redux\n// but they remain here for ease of students transitioning\n\n// Load User\n_s(useAuth, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\nexport const loadUser = async dispatch => {\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\nexport const register = async (dispatch, formData) => {\n  try {\n    const res = await axios.post('/api/users', formData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    loadUser(dispatch);\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n};\n\n// Login User\nexport const login = async (dispatch, formData) => {\n  try {\n    const res = await axios.post('/api/auth', formData);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    loadUser(dispatch);\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n};\n\n// Logout\nexport const logout = dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};\n\n// Clear Errors\nexport const clearErrors = dispatch => dispatch({\n  type: CLEAR_ERRORS\n});\n\n// AuthState Provider Component\n\nconst AuthState = props => {\n  _s2();\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // set token on initial app loading\n  setAuthToken(state.token);\n\n  // load user on first run or refresh\n  if (state.loading) {\n    loadUser(dispatch);\n  }\n\n  // 'watch' state.token and set headers and local storage on any change\n  useEffect(() => {\n    setAuthToken(state.token);\n  }, [state.token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      state: state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthState, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthState;\nexport default AuthState;\nvar _c;\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"names":["React","useReducer","useContext","useEffect","axios","AuthContext","authReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","useAuth","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","post","response","msg","login","logout","clearErrors","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","children"],"sources":["/home/jadidi/Desktop/term7/html/contactSave/NetProject/client/src/context/auth/AuthState.js"],"sourcesContent":["import React, { useReducer, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utiles/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS\n} from '../types';\n\n// Create a custom hook to use the auth context\n\nexport const useAuth = () => {\n  const { state, dispatch } = useContext(AuthContext);\n  return [state, dispatch];\n};\n\n// Action creators\n// NOTE: These could be moved to a separate file like in redux\n// but they remain here for ease of students transitioning\n\n// Load User\nexport const loadUser = async (dispatch) => {\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({ type: AUTH_ERROR });\n  }\n};\n\n// Register User\nexport const register = async (dispatch, formData) => {\n  try {\n    const res = await axios.post('/api/users', formData);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    loadUser(dispatch);\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n};\n\n// Login User\nexport const login = async (dispatch, formData) => {\n  try {\n    const res = await axios.post('/api/auth', formData);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    loadUser(dispatch);\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n};\n\n// Logout\nexport const logout = (dispatch) => {\n  dispatch({ type: LOGOUT });\n};\n\n// Clear Errors\nexport const clearErrors = (dispatch) => dispatch({ type: CLEAR_ERRORS });\n\n// AuthState Provider Component\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // set token on initial app loading\n  setAuthToken(state.token);\n\n  // load user on first run or refresh\n  if (state.loading) {\n    loadUser(dispatch);\n  }\n\n  // 'watch' state.token and set headers and local storage on any change\n  useEffect(() => {\n    setAuthToken(state.token);\n  }, [state.token]);\n\n  return (\n    <AuthContext.Provider value={{ state: state, dispatch }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}