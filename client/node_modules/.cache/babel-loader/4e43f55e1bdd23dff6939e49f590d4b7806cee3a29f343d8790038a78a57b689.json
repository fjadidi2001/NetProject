{"ast":null,"code":"var _jsxFileName = \"/home/jadidi/Desktop/term7/html/contactSave/NetProject/client/src/context/contact/ContactState.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useReducer, useContext } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\n\n// Create a custom hook to use the contact context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useContacts = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useContext(ContactContext);\n  return [state, dispatch];\n};\n\n// Action creators\n// NOTE: These could be moved to a separate file like in redux but they remain here for ease of students transitioning\n\n// Get Contacts\n_s(useContacts, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\nexport const getContacts = async dispatch => {\n  try {\n    const res = await axios.get('/api/contacts');\n    dispatch({\n      type: GET_CONTACTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CONTACT_ERROR,\n      payload: err.response.msg\n    });\n  }\n};\n\n// Add Contact\nexport const addContact = async (dispatch, contact) => {\n  try {\n    const res = await axios.post('/api/contacts', contact);\n    dispatch({\n      type: ADD_CONTACT,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CONTACT_ERROR,\n      payload: err.response.msg\n    });\n  }\n};\n\n// Delete Contact\nexport const deleteContact = async (dispatch, id) => {\n  try {\n    await axios.delete(`/api/contacts/${id}`);\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: CONTACT_ERROR,\n      payload: err.response.msg\n    });\n  }\n};\n\n// Update Contact\nexport const updateContact = async (dispatch, contact) => {\n  try {\n    const res = await axios.put(`/api/contacts/${contact._id}`, contact);\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CONTACT_ERROR,\n      payload: err.response.msg\n    });\n  }\n};\n\n// Clear Contacts\nexport const clearContacts = dispatch => {\n  dispatch({\n    type: CLEAR_CONTACTS\n  });\n};\n\n// Set Current Contact\nexport const setCurrent = (dispatch, contact) => {\n  dispatch({\n    type: SET_CURRENT,\n    payload: contact\n  });\n};\n\n// Clear Current Contact\nexport const clearCurrent = dispatch => {\n  dispatch({\n    type: CLEAR_CURRENT\n  });\n};\n\n// Filter Contacts\nexport const filterContacts = (dispatch, text) => {\n  dispatch({\n    type: FILTER_CONTACTS,\n    payload: text\n  });\n};\n\n// Clear Filter\nexport const clearFilter = dispatch => {\n  dispatch({\n    type: CLEAR_FILTER\n  });\n};\nconst ContactState = props => {\n  _s2();\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      state: state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s2(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ContactState;\nexport default ContactState;\nvar _c;\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"names":["React","useReducer","useContext","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","useContacts","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","post","deleteContact","id","delete","updateContact","put","_id","clearContacts","setCurrent","clearCurrent","filterContacts","text","clearFilter","ContactState","props","initialState","contacts","current","filtered","error","children"],"sources":["/home/jadidi/Desktop/term7/html/contactSave/NetProject/client/src/context/contact/ContactState.js"],"sourcesContent":["import React, { useReducer, useContext } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR\n} from '../types';\n\n// Create a custom hook to use the contact context\n\nexport const useContacts = () => {\n  const { state, dispatch } = useContext(ContactContext);\n  return [state, dispatch];\n};\n\n// Action creators\n// NOTE: These could be moved to a separate file like in redux but they remain here for ease of students transitioning\n\n// Get Contacts\nexport const getContacts = async (dispatch) => {\n  try {\n    const res = await axios.get('/api/contacts');\n\n    dispatch({\n      type: GET_CONTACTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CONTACT_ERROR,\n      payload: err.response.msg\n    });\n  }\n};\n\n// Add Contact\nexport const addContact = async (dispatch, contact) => {\n  try {\n    const res = await axios.post('/api/contacts', contact);\n\n    dispatch({\n      type: ADD_CONTACT,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CONTACT_ERROR,\n      payload: err.response.msg\n    });\n  }\n};\n\n// Delete Contact\nexport const deleteContact = async (dispatch, id) => {\n  try {\n    await axios.delete(`/api/contacts/${id}`);\n\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: CONTACT_ERROR,\n      payload: err.response.msg\n    });\n  }\n};\n\n// Update Contact\nexport const updateContact = async (dispatch, contact) => {\n  try {\n    const res = await axios.put(`/api/contacts/${contact._id}`, contact);\n\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CONTACT_ERROR,\n      payload: err.response.msg\n    });\n  }\n};\n\n// Clear Contacts\nexport const clearContacts = (dispatch) => {\n  dispatch({ type: CLEAR_CONTACTS });\n};\n\n// Set Current Contact\nexport const setCurrent = (dispatch, contact) => {\n  dispatch({ type: SET_CURRENT, payload: contact });\n};\n\n// Clear Current Contact\nexport const clearCurrent = (dispatch) => {\n  dispatch({ type: CLEAR_CURRENT });\n};\n\n// Filter Contacts\nexport const filterContacts = (dispatch, text) => {\n  dispatch({ type: FILTER_CONTACTS, payload: text });\n};\n\n// Clear Filter\nexport const clearFilter = (dispatch) => {\n  dispatch({ type: CLEAR_FILTER });\n};\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  return (\n    <ContactContext.Provider value={{ state: state, dispatch }}>\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}